generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id    String @id @default(uuid())
  name  String
  Dudes Dude[]
}

model Dude {
  id           String    @id @default(uuid())
  userId       String
  userName     String
  src          String
  name         String    @db.Text
  description  String
  instructions String    @db.Text
  seed         String    @db.Text
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  categoryId   String
  category     Category  @relation(fields: [categoryId], references: [id])
  messages     Message[]

  @@index([categoryId])
  @@fulltext([name])
}

model Message {
  id        String   @id @default(uuid())
  role      Role
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dudeId    String
  userId    String
  dude      Dude     @relation(fields: [dudeId], references: [id], onDelete: Cascade)

  @@index([dudeId])
}

model UserSubscription {
  id                     String    @id
  userId                 String    @unique
  stripeCustomerId       String?   @unique @map("stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map("stripe_subscription_id")
  stripePriceId          String?   @map("stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map("stripe_current_period_end")
}

model UserApiLimit {
  id        String   @id
  userId    String   @unique
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

enum Role {
  user
  system
}
